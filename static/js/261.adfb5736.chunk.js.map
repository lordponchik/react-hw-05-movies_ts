{"version":3,"file":"static/js/261.adfb5736.chunk.js","mappings":"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","sources":["webpack://react-hw-05-movies_ts/./src/components/InformationMessage/InformationMessage.module.css?b207","components/InformationMessage/InformationMessage.tsx","webpack://react-hw-05-movies_ts/./src/components/MoviesList/MoviesList.module.css?de3d","webpack://react-hw-05-movies_ts/./src/components/MoviesListItem/MoviesListItem.module.css?7daa","components/MoviesListItem/MoviesListItem.tsx","components/MoviesList/MoviesList.tsx","webpack://react-hw-05-movies_ts/./src/components/Section/Section.module.css?dbe8","components/Section/Section.tsx","services/api.ts","webpack://react-hw-05-movies_ts/./src/components/FindMoviesForm/FindMoviesForm.module.css?2e2a","components/FindMoviesForm/FindMoviesForm.tsx","views/MoviesPageView/MoviesPageView.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"message\":\"InformationMessage_message__2XMt6\",\"animMessage\":\"InformationMessage_animMessage__Zgqpm\"};","import s from './InformationMessage.module.css';\r\n\r\nexport default function InformationMessage() {\r\n  return <p className={s.message}>Unfortunately the requested information is not available.</p>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesWrapper\":\"MoviesList_moviesWrapper__FDjDW\",\"movies\":\"MoviesList_movies__UiG3t\"};","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MoviesListItem_movie__0zWY1\",\"showMovie\":\"MoviesListItem_showMovie__pVO2H\",\"imgWrapper\":\"MoviesListItem_imgWrapper__ctmGT\",\"titleWrapper\":\"MoviesListItem_titleWrapper__GZdPL\",\"title\":\"MoviesListItem_title__AfjQN\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport IMovie from '../../interfaces/Movie.interface';\r\nimport s from './MoviesListItem.module.css';\r\n\r\ninterface Props {\r\n  movie: IMovie;\r\n}\r\n\r\nconst img_url =\r\n  'https://images.unsplash.com/photo-1625315268158-bb9ef970ca77?q=80&w=2397&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D';\r\n\r\nexport default function MoviesListItem({\r\n  movie: { id, poster_path, original_name, title, name },\r\n}: Props) {\r\n  const loc = useLocation();\r\n\r\n  return (\r\n    <li className={s.movie}>\r\n      <Link to={`/movies/${id}`} state={{ from: loc }}>\r\n        <div className={s.imgWrapper}>\r\n          <img\r\n            src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : img_url}\r\n            alt={title || name || original_name}\r\n            width=\"250\"\r\n            className={s.poster}\r\n          />\r\n          <div className={s.titleWrapper}>\r\n            <p className={s.title}>{title || name || original_name}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n","import IMovie from '../../interfaces/Movie.interface';\r\nimport s from './MoviesList.module.css';\r\nimport MoviesListItem from '../MoviesListItem/MoviesListItem';\r\n\r\ninterface Props {\r\n  movies: IMovie[];\r\n}\r\n\r\nexport default function MoviesList({ movies }: Props) {\r\n  return (\r\n    <div className={s.moviesWrapper}>\r\n      <ul className={s.movies}>\r\n        {movies.map(movie => {\r\n          return <MoviesListItem key={movie.id} movie={movie}></MoviesListItem>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__UqzgR\"};","import s from './Section.module.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function Section({ title, children }: Props) {\r\n  return (\r\n    <section>\r\n      <h1 className={s.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","const options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNzJjNjgwZTU1OGJkMmM2YjkwMmM4MGIyZDVlMDc3ZCIsIm5iZiI6MTczMDQ3NDM2NC43MzMxNzE1LCJzdWIiOiI2NDgxY2M5Y2UyNzI2MDAwZThiZjRlYjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.5dCuWIPkc-FoQqtFcC5mms7ke4vYd9VzbOaT7ZD_h1c',\r\n  },\r\n};\r\n\r\nasync function fetchMoviesAPI(route: string) {\r\n  const request = await fetch(`https://api.themoviedb.org/3/${route}`, options);\r\n  const results = await request.json();\r\n\r\n  return results;\r\n}\r\n\r\nexport async function fetchTrendingMovies() {\r\n  return await fetchMoviesAPI('trending/movie/day?language=en-US');\r\n}\r\n\r\nexport async function fetchMovies(q: string) {\r\n  return await fetchMoviesAPI(`search/movie?query=${q}&include_adult=false&language=en-US&page=1`);\r\n}\r\n\r\nexport async function fetchMoviesDetails(id: number) {\r\n  return await fetchMoviesAPI(`movie/${id}?language=en-US`);\r\n}\r\n\r\nexport async function fetchMoviesCredits(id: number) {\r\n  return await fetchMoviesAPI(`movie/${id}/credits?language=en-US`);\r\n}\r\n\r\nexport async function fetchMoviesReviews(id: number) {\r\n  return await fetchMoviesAPI(`movie/${id}/reviews?language=en-US&page=1`);\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FindMoviesForm_form__6cDXM\",\"input\":\"FindMoviesForm_input__o0sne\"};","import { useState } from 'react';\r\nimport s from './FindMoviesForm.module.css';\r\n\r\ninterface Props {\r\n  defQuery?: string;\r\n  onSubmitForm: (q: string) => void;\r\n}\r\n\r\nexport default function FindMoviesForm({ defQuery = '', onSubmitForm }: Props) {\r\n  const [query, setQuery] = useState(defQuery);\r\n\r\n  const handlerChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const q = e.currentTarget.value;\r\n\r\n    setQuery(q);\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    onSubmitForm(query);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={s.form}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={handlerChangeInput}\r\n        value={query}\r\n        className={s.input}\r\n        placeholder=\"movie title...\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import Section from \"../../components/Section/Section\";\r\nimport FindMoviesForm from \"../../components/FindMoviesForm/FindMoviesForm\";\r\nimport { fetchMovies } from \"../../services/api\";\r\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport InformationMessage from \"../../components/InformationMessage/InformationMessage\";\r\n\r\nasync function requestMovies(query: string | null) {\r\n  const { results } = await fetchMovies(query as string);\r\n\r\n  return results;\r\n}\r\n\r\nexport default function MoviesPageView() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get(\"query\");\r\n  const {\r\n    data: movies,\r\n    isLoading,\r\n    isError,\r\n  } = useQuery({\r\n    queryKey: [\"movies\", query],\r\n    queryFn: () => requestMovies(query),\r\n    refetchOnWindowFocus: false,\r\n    enabled: !!query,\r\n  });\r\n\r\n  const onSubmit = (q: string) => {\r\n    if (q === query) {\r\n      return;\r\n    }\r\n\r\n    setSearchParams({ query: q });\r\n  };\r\n\r\n  return (\r\n    <Section title=\"Find a movie\">\r\n      <FindMoviesForm\r\n        onSubmitForm={onSubmit}\r\n        defQuery={query ?? \"\"}\r\n      ></FindMoviesForm>\r\n      {isLoading && <Loader />}\r\n      {(isError || movies?.length === 0) && <InformationMessage />}\r\n      {movies && <MoviesList movies={movies}></MoviesList>}\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["InformationMessage","_jsx","className","s","message","children","img_url","MoviesListItem","_ref","movie","id","poster_path","original_name","title","name","loc","useLocation","Link","to","state","from","_jsxs","imgWrapper","src","alt","width","poster","titleWrapper","MoviesList","movies","moviesWrapper","map","Section","options","method","headers","accept","Authorization","async","fetchMoviesAPI","route","request","fetch","json","fetchTrendingMovies","fetchMovies","q","fetchMoviesDetails","fetchMoviesCredits","fetchMoviesReviews","FindMoviesForm","defQuery","onSubmitForm","query","setQuery","useState","onSubmit","e","preventDefault","form","type","onChange","currentTarget","value","input","placeholder","MoviesPageView","searchParams","setSearchParams","useSearchParams","get","data","isLoading","isError","useQuery","queryKey","queryFn","results","requestMovies","refetchOnWindowFocus","enabled","Loader","length"],"sourceRoot":""}